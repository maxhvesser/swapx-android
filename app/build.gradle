import uk.swapx.build.Deps
import uk.swapx.build.Versions

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id "com.github.ben-manes.versions" version "0.42.0"
    id 'com.google.protobuf'
}

android {
    namespace 'uk.mhl.swapx'
    compileSdk 32

    defaultConfig {
        applicationId "uk.mhl.swapx"
        minSdk 26
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion Versions.composeCompiler
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

protobuf {
    protoc {
        // TODO: Work out why protoBuf version can't come from dependencies file.

        // For Apple M1, add protoc_platform=osx-x86_64 in $HOME/.gradle/gradle.properties
        if (project.hasProperty('protoc_platform')) {
            artifact = "com.google.protobuf:protoc:4.0.0-rc-2:${protoc_platform}"
        } else {
            artifact = "com.google.protobuf:protoc:4.0.0-rc-2"
        }
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}

dependencies {
    // Accompanist
    implementation Deps.Accompanist.insetsUi
    implementation Deps.Accompanist.navigationMaterial

    // Activity
    implementation Deps.Compose.activity

    // Compose UI
    implementation Deps.Compose.Ui.ui

    // DataStore
    implementation Deps.Datastore.datastore
    implementation Deps.Datastore.protoBuf

    // Flipper
    debugImplementation Deps.Flipper.flipper
    debugImplementation Deps.Flipper.soLoader

    // Hilt
    implementation Deps.Hilt.hilt
    kapt Deps.Hilt.compiler
    implementation Deps.Hilt.navigation

    // Kotlin
    implementation Deps.Kotlin.ktx

    // Lifecycle
    implementation Deps.Lifecycle.runtimeKtx
    implementation Deps.Lifecycle.viewModelCompose

    // Material
    implementation Deps.Material.material3
    implementation Deps.Material.material

    // Navigation
    implementation Deps.Compose.navigation

    // Retrofit
    implementation Deps.Retrofit.retrofit
    implementation Deps.Retrofit.gson

    // Room
    kapt Deps.Room.compiler
    implementation Deps.Room.ktx
    implementation Deps.Room.runtime

    // Test suite
    testImplementation Deps.Junit.junit
    androidTestImplementation Deps.Junit.ext
    androidTestImplementation Deps.Junit.espresso
    androidTestImplementation Deps.Compose.Ui.testing

    // Tooling
    debugImplementation Deps.Compose.Ui.tooling
    debugImplementation Deps.Compose.Ui.testManifest
    implementation Deps.Compose.Ui.toolingPreview
}